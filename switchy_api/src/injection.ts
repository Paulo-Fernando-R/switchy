import { UserRepository } from "./repositories/userRepository/userRepository";
import JwtTokenService from "./services/token/jwtTokenService";
import EncryptServiceBcrypt from "./services/encrypt/encryptService";
import GetUserByEmailPasswordCase from "./domain/user/cases/getUserByEmailPasswordCase";
import GenerateTokenFromUserCase from "./domain/auth/cases/generateTokenFromUserCase";
import GetUserFromTokenCase from "./domain/auth/cases/getUserFromTokenCase";
import { Container } from "inversify";
import IUserRepository from "./repositories/userRepository/IuserRepository";
import ITokenService from "./services/token/itokenService";
import IEncryptService from "./services/encrypt/iencryptService";
import "reflect-metadata";
import { PostRepository } from "./repositories/postRepository/postRepository";
import IPostRepository from "./repositories/postRepository/IpostRepository";
import SaveCommentCase from "./domain/post/cases/saveCommentCase";
import GetCommentsCase from "./domain/post/cases/getCommentsCase";
import GetUserByIdCase from "./domain/user/cases/getUserByIdCase";
import GetUserPostsCase from "./domain/post/cases/getUserPostsCase";
import GetFeedPostsCase from "./domain/post/cases/getFeedPostsCase";
import DeletePostCase from "./domain/post/cases/deletePostCase";
import CreatePostCase from "./domain/post/cases/createPostCase";
import GetPostByIdCase from "./domain/post/cases/getPostByIdCase";
import UpdateLikeOfPostCase from "./domain/post/cases/updateLikeOfPostCase";
import SignUpCase from "./domain/user/cases/signUpCase";
import SearchUserCase from "./domain/user/cases/searchUserCase";
import UpdateUserCase from "./domain/user/cases/updateUserCase";
import ChangeUserPasswordCase from "./domain/user/cases/changePasswordCase";
import FollowUserCase from "./domain/user/cases/followUserCase";
import GetUserByEmailCase from "./domain/user/cases/getUserByEmailCase";
import UpdateUsernameCase from "./domain/user/cases/updateUsernameCase";
import UnfollowUserCase from "./domain/user/cases/unfollowUserCase";
import UpdateUserPostsCase from "./domain/post/cases/updateUserPostsCase";
import IGeneratePasswordService from "./services/crypto/igeneratePasswordService";
import GeneratePasswordService from "./services/crypto/generatePasswordService";
import DeleteUserAccountCase from "./domain/user/cases/deleteUserAccountCase";
import UserIsDeletedCase from "./domain/user/cases/userIsDeletedCase";
import INotificationRepository from "./repositories/notificationRepository/inotificationRepository";
import NotificationRepository from "./repositories/notificationRepository/notificationRepository";
import GetNotificationsByDateCase from "./domain/notification/cases/getNotificationsByDateCase";
import MarkNotificationsWithReaderCase from "./domain/notification/cases/markNotificationsWithReaderCase";
import NewFollowerNotificationCase from "./domain/notification/cases/newFollowerNotificationCase";
import GetNotificationsByReceiverId from "./domain/notification/cases/getNotificationsByReceive";

let container = new Container();
container.bind<ITokenService>('TokenService').to(JwtTokenService);
container.bind<IEncryptService>('EncryptService').to(EncryptServiceBcrypt);
container.bind<IGeneratePasswordService>('GeneratePasswordService').to(GeneratePasswordService);

container.bind<IUserRepository>('UserRepository').to(UserRepository);
container.bind<IPostRepository>('PostRepository').to(PostRepository);
container.bind<INotificationRepository>('NotificationRepository').to(NotificationRepository);

container.bind('GetUserByEmailPasswordCase').to(GetUserByEmailPasswordCase);
container.bind('GenerateTokenFromUserCase').to(GenerateTokenFromUserCase);
container.bind('GetUserFromTokenCase').to(GetUserFromTokenCase);
container.bind('SaveCommentCase').to(SaveCommentCase);
container.bind('GetCommentsCase').to(GetCommentsCase);
container.bind('GetUserByIdCase').to(GetUserByIdCase);
container.bind('DeletePostCase').to(DeletePostCase);
container.bind('GetFeedPostsCase').to(GetFeedPostsCase);
container.bind('GetUserPostsCase').to(GetUserPostsCase);
container.bind('CreatePostCase').to(CreatePostCase);
container.bind('GetPostByIdCase').to(GetPostByIdCase);
container.bind('UpdateLikeOfPostCase').to(UpdateLikeOfPostCase);
container.bind('SignUpCase').to(SignUpCase);
container.bind('SearchUserCase').to(SearchUserCase);
container.bind('UpdateUserCase').to(UpdateUserCase);
container.bind('FollowUserCase').to(FollowUserCase);
container.bind('ChangeUserPasswordCase').to(ChangeUserPasswordCase);
container.bind('UnfollowUserCase').to(UnfollowUserCase);
container.bind('UpdateUsernameCase').to(UpdateUsernameCase);
container.bind('GetUserByEmailCase').to(GetUserByEmailCase);
container.bind('UpdateUserPostsCase').to(UpdateUserPostsCase);
container.bind('DeleteUserAccountCase').to(DeleteUserAccountCase);
container.bind('UserIsDeletedCase').to(UserIsDeletedCase);
container.bind('GetNotificationsByDateCase').to(GetNotificationsByDateCase);
container.bind('MarkNotificationsWithReaderCase').to(MarkNotificationsWithReaderCase);
container.bind('NewFollowerNotificationCase').to(NewFollowerNotificationCase);
container.bind('GetNotificationsByReceiverId').to(GetNotificationsByReceiverId);

export default container;